@page "/entradas"
@inject NavigationManager nav
@inject Services.Interface.IEntradaService _entradaService

<PageTitle>Entradas</PageTitle>

<h1>Entradas</h1>
<p>Infome seus valores recebidos mensalmente como por exemplo <b>salários</b> ou <b>alugueis</b></p>

<button class="btn btn-primary" @onclick="@Adicionar">Adicionar</button>

<hr />

<p>Minhas Entradas:</p>

@if (entradas.Count == 0)
{
    if (!retornouApi)
    {
        <p>Carregando...</p>
    } else
    {
        <p>Não foi possível carregar as informações!</p>
    }
} else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Valor</th>
                <th>Recebo até</th>
                <th>#</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ent in entradas)
            {
                <tr>
                    <td>@ent.Nome</td>
                    <td>@ent.Valor</td>
                    <td>@ent.DataVigencia</td>
                    <td style="white-space: nowrap">
                        <NavLink href="@($"/entradas/delete/{ent.Id}")" class="btn btn-link oi oi-trash text-danger mr-1 nounderline"></NavLink>
                    </td>                   

                </tr>
            }
        </tbody>
    </table>
}


@code {
    List<Entrada> entradas = new List<Entrada>();
    bool retornouApi = false;

    protected override async Task OnParametersSetAsync()
    {
        entradas = await _entradaService.GetAll();
        retornouApi = true;
    }

    private void Adicionar()
    {
        nav.NavigateTo("/entradas/add");
    }
}
