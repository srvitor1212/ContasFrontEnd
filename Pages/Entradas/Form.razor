@inject NavigationManager nav

<EditForm   Model="@entrada"
            OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div>
        <label>Nome :</label>
        <div>
            <InputText @bind-Value="@entrada.Nome" class="form-control"
                       placeholder="Salário, Aluguel, A receber..." />
            <ValidationMessage For="@(() => entrada.Nome)"></ValidationMessage>
        </div>
    </div>

    <div>
        <label>Valor :</label>
        <div>
            <!--//todo o campo ta permitindo assim: "valor": 200.13123213213214, -->
            <InputNumber placeholder="1320,40" @bind-Value="@entrada.Valor" class="form-control" />
        </div>
    </div>

    <div>
        <label>Recebo até :</label>
        <div>
            <!-- //todo usar esse calendário que é mais top -->
            @* <CalendarioMesAno DataInicial="entrada.DataVigencia" /> *@

            <InputDate class="form-control" @bind-Value="entrada.DataVigencia"></InputDate>
        </div>
    </div>

    <div>&nbsp;</div>
    <ValidationSummary></ValidationSummary>

    <div class="btn-group">
        <button disabled="@loading" class="btn btn-success">
            @if (loading)
            {
                <span class="spinner-border spinner-border-sm mr-1"></span>
            }
            &nbsp;@ButtonText
        </button>

        <button class="btn btn-primary" onclick="@Voltar">Voltar</button>
    </div>

</EditForm>

@code {
    [Parameter]
    public string ButtonText { get; set; }
    [Parameter]
    public Entrada entrada { get; set; }
    [Parameter]
    public bool loading { get; set; }
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    private void Voltar()
    {
        nav.NavigateTo("/entradas");
    }

}
